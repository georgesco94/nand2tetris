// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=register0, b=register1, c=register2, d=register3, e=register4, f=register5, g=register6, h=register7);
    Register(in=in, load=register0, out=register0output);
    Register(in=in, load=register1, out=register1output);
    Register(in=in, load=register2, out=register2output);
    Register(in=in, load=register3, out=register3output);
    Register(in=in, load=register4, out=register4output);
    Register(in=in, load=register5, out=register5output);
    Register(in=in, load=register6, out=register6output);
    Register(in=in, load=register7, out=register7output);
    Mux8Way16(a=register0output, b=register1output, c=register2output, d=register3output, e=register4output, f=register5output, g=register6output, h=register7output, sel=address, out=out);

}